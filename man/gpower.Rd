% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gpower.R
\name{gpower}
\alias{gpower}
\title{Compute Sparse PCA using GPower method}
\usage{
gpower(
  data,
  k,
  rho,
  penalty = c("l0", "l1"),
  center = c(TRUE, FALSE),
  block = c(TRUE, FALSE),
  mu = 1,
  iter_max = 1000,
  epsilon = 1e-04
)
}
\arguments{
\item{data}{Input matrix of size (p x n) with p < n.}

\item{k}{Number of components, 0 < k < p.}

\item{rho}{Relative sparsity weight factor of the optimization. Either a
vector of floats of size k or float which will be repeated k times. 0 < rho
< 1.}

\item{penalty}{Penalty type to use in the optimization. Either 'l0' or 'l1'.
The default is 'l1' since it performed best in experiments.}

\item{center}{Centers the data. Either TRUE or FALSE. The default is TRUE.}

\item{block}{Optimization method. If FALSE, the components are calculated
individually. If TRUE, all components are calculated at the same time.
The default is FALSE.}

\item{mu}{Mean to be applied to each component in the block. Either a vector
of float of size k or a float which will be repeated k times. Only used if
block is TRUE. The default is 1.}

\item{iter_max}{Maximum iterations when adjusting components with gradient
descent. The default is 1000.}

\item{epsilon}{Epsilon of the gradient descent stopping function.
The default is 1e-4.}
}
\value{
List containing: \describe{ \item{weights}{The PCA components}
\item{scores}{Scores of the components on data} \item{a_approx}{Reconstructed
version of data using the components} \item{prop_sparse}{Proportion of
sparsity of the components} \item{exp_var}{Explained ratio of variance of
the components} \item{centers}{Centers of matrix data if center == TRUE} }
}
\description{
{ \loadmathjax GPower uses four different optimization procedures for the four
combinations between  \mjseqn{l_0} and \mjseqn{l_1} penalty and single-unit or block
computation. The function tries to find a weights matrix
\mjseqn{W \in R^{n \times k}} which has the highest possible explained
variance of the data matrix \mjseqn{X \in R^{p \times n}} under the penalty
constraints of the case. The matrix \mjseqn{Z \in R^{n \times k}} is used by some
of the methods as an intermediate solution. Lambda is calculated by
multiplying rho with the maximum possible value of lambda.

The objective function of the single unit case with \mjseqn{l_1} penalty is
\mjsdeqn{\hat{w} = \underset{\| w \| = 1}{\textrm{argmax}}{\| Xw \| - \lambda \| w \|_1}}
For the single-unit case with the \mjseqn{l_0} penalty, the objective function is
\mjsdeqn{\hat{w} = \underset{\| z \| = 1}{\textrm{argmax}}\;
\underset{\| w \| = 1}{\textrm{argmax}}{ (z^\top X w)^2 - \lambda \| w \|_0},}
where the results are squared before gamma is subtracted instead of after.
In order to compute more than 1 component, the matrix \mjseqn{X} is adjusted after each new component.

For the block cases, the following functions are used. For the case with \mjseqn{l_1} penalty,
\mjsdeqn{\hat{W} = \underset{Z \in M^p_k}{\textrm{argmax}} \sum_{j=1}^k
{\underset{\| W_j \| = 1}{\textrm{argmax}} \mu_j Z_j^{\top} XW_j -
\lambda_j {\| Z_j \|} }}
and for the \mjseqn{l_0} penalty case,
\mjsdeqn{\hat{W} = \underset{Z \in M^p_k}{\textrm{argmax}} \sum_{j=1}^k
\underset{\| \hat{W}_j \| = 1}{\textrm{argmax}} (\mu_j Z_i^{\top}
X W_j)^2 - \lambda_j\| W_j \|_0}

All of these functions are optimized using the generalized power approach
as described in the paper by JournÃ©e et al. (2010).}
}
\details{
Generalized power method for sparse principal component analysis. Implements
the method developed by Journee et al. (2010) with a choice between a L1 and
L0 penalty and a column based and block approach.
}
\examples{
set.seed(360)
p <- 20
n <- 50
k <- 5
data <- matrix(stats::rnorm(p * n), nrow = p, ncol = n)
rho <- 0.1
# rho <- c(0.1, 0.2, 0.1, 0.2, 0.1)
mu <- 1
# mu <- c(1, 1.5, 0.5, 2, 1)

# Single unit with l1 penalty
gpower(data, k, rho, 'l1', TRUE)

# Single unit with l0 penalty
gpower(data, k, rho, 'l0', TRUE)

# Block with l1 penalty
gpower(data, k, rho, 'l1', TRUE, TRUE, mu)

# Block with l0 penalty
gpower(data, k, rho, 'l0', TRUE, TRUE, mu)

}
\references{
Journee, M., Nesterov, Y., Richtarik, P. and Sepulchre, R. (2010)
Generalized Power Method for Sparse Principal Component Analysis. \emph{Journal of
Machine Learning Research. 11}, 517-553.
}
